1- make routes/admin.php && put prefix for it

		 a) public function map()
			{
				$this->mapAdminRoutes();
			}

		 b) protected function mapWebRoutes(){
				 protected function mapAdminRoutes()
				{
					Route::prefix('admin')
						->middleware('web')
						->namespace($this->namespace)
						->group(base_path('routes/admin.php'));
				}
			}


2-  make Admin Guard => 
	a)  'guards' => [

			'admin' => [
				'driver' => 'session',
				'provider' => 'admins',
			],
		],

	b) 'providers' => [

			'admins' => [
				'driver' => 'eloquent',
				'model' => App\Models\Admin::class,
			],
		],

3- Routes :
	Route::group(['namespace' => 'Admin', 'Middleware' => 'auth:admin' ], function () {
		Route::get('/', 'DashboardController@index')->name('admin.dashboard');
	});

	Route::group(['namespace' => 'Admin', 'Middleware' => 'guest:admin' ], function () {
		Route::get('login', 'LoginController@getLogin')->name('get.admin.login');
		Route::post('login', 'LoginController@login')->name('admin.login');
	});


4- Go To middleware/RedirectIfAuthenticated.php

	public function handle($request, Closure $next, $guard = null)
    {
        if (Auth::guard($guard)->check()) {
            if($guard == 'admin'){
                return redirect(RouteServiceProvider::ADMIN);
            }else{
                return redirect(RouteServiceProvider::HOME);
            }
        }

        return $next($request);
    }

5- Go To RouteServicesProvider :
	    public const HOME = '/';
    	public const ADMIN = '/admin';


6- Go To middleware/Authenticate.php

	 protected function redirectTo($request)
    {
        if (! $request->expectsJson()) {
            if($request->is('admin/*')){
                return route('get.admin.login');
            }else{
                return route('login');
            }
        }
    }


